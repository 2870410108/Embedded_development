C51 COMPILER V9.56.0.0   OLED_ADAPTATION_SNAKE                                             07/02/2024 10:43:34 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE OLED_ADAPTATION_SNAKE
OBJECT MODULE PLACED IN .\Objects\OLED_adaptation_snake.obj
COMPILER INVOKED BY: C:\dev\keil\C51\BIN\C51.EXE OLED_adaptation_snake.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\OLED_adaptation_snake.lst) TABS(2) OBJECT(.\Objects\OLED_adaptation_snake.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <tools/I2C.H>
   3          #define uchar unsigned char
   4          void OLED_WriteCommand(uchar Command)
   5          { 
   6   1        start ();
   7   1        send_byte(0x78);//从机地址
   8   1        accept_response();
   9   1        send_byte(0x00);//写命令
  10   1        accept_response();
  11   1        send_byte(Command);
  12   1        accept_response();
  13   1        stop ();
  14   1      }
  15           
  16          
  17          void OLED_WriteData(uchar Data)
  18          {
  19   1        
  20   1        start ();
  21   1        send_byte(0x78);//从机地址
  22   1        accept_response();
  23   1        send_byte(0x40);//写命令
  24   1        accept_response();
  25   1        send_byte(Data);
  26   1        accept_response();
  27   1        stop ();
  28   1      }
  29           
  30          //该函数Y的范围0—7，X的范围0-127
  31          void OLED_SetCursor(uchar Y, uchar X)
  32          {
  33   1        OLED_WriteCommand(0xB0 | Y);          //设置Y位置
  34   1        OLED_WriteCommand(0x10 | ((X & 0xF0) >> 4));  //设置X位置高4位
  35   1        OLED_WriteCommand(0x00 | (X & 0x0F));     //设置X位置低4位
  36   1      }
  37           
  38          
  39          void OLED_Clear(void)
  40          {  
  41   1        uchar i, j;
  42   1        for (j = 0; j < 8; j++)
  43   1        {
  44   2          OLED_SetCursor(j, 0);
  45   2          for(i = 0; i < 128; i++)
  46   2          {
  47   3            OLED_WriteData(0x00);
  48   3          }
  49   2        }
  50   1      }
  51          
  52          void OLED_Init(void)
  53          {
  54   1        uchar i, j;
C51 COMPILER V9.56.0.0   OLED_ADAPTATION_SNAKE                                             07/02/2024 10:43:34 PAGE 2   

  55   1        for (i = 0; i < 100; i++)     //上电延时
  56   1          for (j = 0; j < 100; j++);
  57   1        
  58   1        
  59   1        OLED_WriteCommand(0xAE);  //关闭显示
  60   1        
  61   1        OLED_WriteCommand(0xD5);  //设置显示时钟分频比/振荡器频率
  62   1        OLED_WriteCommand(0x80);
  63   1        
  64   1        OLED_WriteCommand(0xA8);  //设置多路复用率
  65   1        OLED_WriteCommand(0x3F);
  66   1        
  67   1        OLED_WriteCommand(0xD3);  //设置显示偏移
  68   1        OLED_WriteCommand(0x00);
  69   1        
  70   1        OLED_WriteCommand(0x40);  //设置显示开始行
  71   1        
  72   1        OLED_WriteCommand(0xA1);  //设置左右方向，0xA1正常 0xA0左右反置
  73   1        
  74   1        OLED_WriteCommand(0xC8);  //设置上下方向，0xC8正常 0xC0上下反置
  75   1       
  76   1        OLED_WriteCommand(0xDA);  //设置COM引脚硬件配置
  77   1        OLED_WriteCommand(0x12);
  78   1        
  79   1        OLED_WriteCommand(0x81);  //设置对比度控制
  80   1        OLED_WriteCommand(0xCF);
  81   1       
  82   1        OLED_WriteCommand(0xD9);  //设置预充电周期
  83   1        OLED_WriteCommand(0xF1);
  84   1       
  85   1        OLED_WriteCommand(0xDB);  //设置VCOMH取消选择级别
  86   1        OLED_WriteCommand(0x30);
  87   1       
  88   1        OLED_WriteCommand(0xA4);  //设置整个显示打开/关闭
  89   1       
  90   1        OLED_WriteCommand(0xA6);  //设置正常/倒转显示
  91   1       
  92   1        OLED_WriteCommand(0x8D);  //设置充电泵
  93   1        OLED_WriteCommand(0x14);
  94   1       
  95   1        OLED_WriteCommand(0xAF);  //开启显示
  96   1          
  97   1        OLED_Clear();       //OLED清屏
  98   1      }
  99          void show_image(uchar y, uchar x,uchar width ,uchar height, uchar * image){
 100   1        uchar i,j;
 101   1        for(j=0;j<height/8;j++){
 102   2        OLED_SetCursor(y+j,x);
 103   2          for(i=0;i<width;i++)
 104   2            OLED_WriteData(image[j*width+i]);
 105   2        }
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.56.0.0   OLED_ADAPTATION_SNAKE                                             07/02/2024 10:43:34 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
